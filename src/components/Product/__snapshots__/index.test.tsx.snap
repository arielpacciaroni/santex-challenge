// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Product component should change the selected variant when the select input changes 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eqUAAy geIxsC"
      >
        <img
          alt="Product name"
          class="sc-iGgWBj fUxJYM"
          src="https://via.placeholder.com/300"
        />
        <div
          class="sc-dcJsrY cTqVHv"
        >
          <h2
            class="sc-fqkvVR iLuOC"
          >
            Product name
          </h2>
          <p
            class="sc-gsFSXq fifgtg"
          >
            Product description
          </p>
          <p>
            Choose a variant:
          </p>
          <select
            class="sc-gEvEer dJWUhf"
          >
            <option
              value="1"
            >
              Variant 1 - $100
            </option>
            <option
              value="2"
            >
              Variant 2 - $200
            </option>
          </select>
          <div
            class="sc-kAyceB iJPHlp"
          >
            <button
              class="sc-aXZVg fmhrVe"
            >
              Buy
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eqUAAy geIxsC"
    >
      <img
        alt="Product name"
        class="sc-iGgWBj fUxJYM"
        src="https://via.placeholder.com/300"
      />
      <div
        class="sc-dcJsrY cTqVHv"
      >
        <h2
          class="sc-fqkvVR iLuOC"
        >
          Product name
        </h2>
        <p
          class="sc-gsFSXq fifgtg"
        >
          Product description
        </p>
        <p>
          Choose a variant:
        </p>
        <select
          class="sc-gEvEer dJWUhf"
        >
          <option
            value="1"
          >
            Variant 1 - $100
          </option>
          <option
            value="2"
          >
            Variant 2 - $200
          </option>
        </select>
        <div
          class="sc-kAyceB iJPHlp"
        >
          <button
            class="sc-aXZVg fmhrVe"
          >
            Buy
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Product component should render a product 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-eqUAAy geIxsC"
      >
        <img
          alt="Product name"
          class="sc-iGgWBj fUxJYM"
          src="https://via.placeholder.com/300"
        />
        <div
          class="sc-dcJsrY cTqVHv"
        >
          <h2
            class="sc-fqkvVR iLuOC"
          >
            Product name
          </h2>
          <p
            class="sc-gsFSXq fifgtg"
          >
            Product description
          </p>
          <p>
            Choose a variant:
          </p>
          <select
            class="sc-gEvEer dJWUhf"
          >
            <option
              value="1"
            >
              Variant 1 - $100
            </option>
          </select>
          <div
            class="sc-kAyceB iJPHlp"
          >
            <button
              class="sc-aXZVg fmhrVe"
            >
              Buy
            </button>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-eqUAAy geIxsC"
    >
      <img
        alt="Product name"
        class="sc-iGgWBj fUxJYM"
        src="https://via.placeholder.com/300"
      />
      <div
        class="sc-dcJsrY cTqVHv"
      >
        <h2
          class="sc-fqkvVR iLuOC"
        >
          Product name
        </h2>
        <p
          class="sc-gsFSXq fifgtg"
        >
          Product description
        </p>
        <p>
          Choose a variant:
        </p>
        <select
          class="sc-gEvEer dJWUhf"
        >
          <option
            value="1"
          >
            Variant 1 - $100
          </option>
        </select>
        <div
          class="sc-kAyceB iJPHlp"
        >
          <button
            class="sc-aXZVg fmhrVe"
          >
            Buy
          </button>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
